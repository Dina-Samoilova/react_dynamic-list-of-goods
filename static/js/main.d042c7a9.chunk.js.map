{"version":3,"sources":["api/goods.ts","GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["getAll","fetch","then","response","json","get5First","a","allGoods","sort","good1","good2","name","localeCompare","splice","getRedGoods","filter","good","color","GoodsList","goods","map","style","id","App","useState","setGoods","loadError","setLoadError","choosed","setChoosed","load","callback","message","loadGoods","type","className","onClick","length","ReactDOM","render","document","getElementById"],"mappings":"4OAGO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,sEACAN,IADA,cACjBO,EADiB,yBAGhBA,EAASC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,KAC1CC,cAAcF,EAAMC,SAAOE,OAAO,EAAG,IAJjB,2CAAH,qDAOTC,EAAW,uCAAG,4BAAAR,EAAA,sEACFN,IADE,cACnBO,EADmB,yBAGlBA,EAASQ,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,UAHX,2CAAH,qD,OCTXC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAJ,GAAI,OACb,oBAEEK,MAAO,CAAEJ,MAAOD,EAAKC,OAFvB,SAIGD,EAAKL,MAHDK,EAAKM,UC+EHC,EApFO,WACpB,MAA0BC,mBAAiB,IAA3C,mBAAOL,EAAP,KAAcM,EAAd,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA8BH,mBAAS,IAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAEMC,EAAI,uCAAG,WAAOC,EAA2BC,GAAlC,eAAA1B,EAAA,+EAEeyB,EAFf,OAEHE,EAFG,OAITR,EAASQ,GACTJ,EAAWG,GALF,gDAOTL,GAAa,GAPJ,yDAAH,wDAgBV,OACE,qCACE,uDAEA,wBACEO,KAAK,SACLC,UAAU,SACVC,QAAS,kBAAMN,EAAK9B,IAAU,uBAHhC,4BAQA,wBACEkC,KAAK,SACLC,UAAU,SACVC,QAAS,kBAAMN,EAAKzB,IAAa,2BAHnC,gCAQA,wBACE6B,KAAK,SACLC,UAAU,SACVC,QAAS,kBAAMN,EAAKhB,IAAe,2BAHrC,4BAQA,wBACEoB,KAAK,SACLC,UAAU,SACVC,QApCQ,WACZX,EAAS,IACTI,EAAW,KA+BT,wBAQCD,GACC,6BACGA,IAIJT,EAAMkB,OAAS,GACd,cAAC,EAAD,CACElB,MAAOA,KAIRO,GAA8B,IAAjBP,EAAMkB,QACpB,qBAAKF,UAAU,UAAf,iEAKDT,GACC,qBAAKS,UAAU,gBAAf,qDC9ERG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d042c7a9.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = async () => {\n  const allGoods = await getAll();\n\n  return allGoods.sort((good1, good2) => good1.name\n    .localeCompare(good2.name)).splice(0, 5);\n};\n\nexport const getRedGoods = async () => {\n  const allGoods = await getAll();\n\n  return allGoods.filter(good => good.color === 'red');\n};\n","import React from 'react';\n\ntype Props = {\n  goods: Good[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { GoodsList } from './GoodsList/GoodsList';\n\nconst App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [loadError, setLoadError] = useState(false);\n  const [choosed, setChoosed] = useState('');\n\n  const load = async (callback: Promise<Good[]>, message: string) => {\n    try {\n      const loadGoods = await callback;\n\n      setGoods(loadGoods);\n      setChoosed(message);\n    } catch (error) {\n      setLoadError(true);\n    }\n  };\n\n  const clear = () => {\n    setGoods([]);\n    setChoosed('');\n  };\n\n  return (\n    <>\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={() => load(getAll(), 'You load All Goods')}\n      >\n        Load All goods\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={() => load(get5First(), 'You load First 5 Goods')}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={() => load(getRedGoods(), 'You load All Red Goods')}\n      >\n        Load red goods\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={clear}\n      >\n        Clear list\n      </button>\n\n      {choosed && (\n        <h3>\n          {choosed}\n        </h3>\n      )}\n\n      {goods.length > 0 && (\n        <GoodsList\n          goods={goods}\n        />\n      )}\n\n      {(!loadError && goods.length === 0) && (\n        <div className=\"no-list\">\n          No goods in list, click load button to see the list\n        </div>\n      )}\n\n      {loadError && (\n        <div className=\"error-message\">\n          An error occured when loading goods\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}